import { LineEdit,ComboBox,SpinBox,Slider } from "std-widgets.slint";
import { BlueButton } from "bluebutton.slint";

import { AppGlobal, AppImages } from "styles.slint";

export  component SettingTab inherits Rectangle {
    in-out property <string> current_path;
    in-out property <string> outtext  <=> outtext.text;
    in-out property <string> input_path <=> input_path_line.text;   
    in-out property <string> book_name <=> book_name_line.text;
    in-out property <string> output_path <=> output_path_line.text;
    in-out property <float> compress_ratio <=> compress_ratio_slider.value;
    in-out property <string> font_path <=> font_path_line.text;
    in-out property <string> font_backup_path <=> font_backup_path_line.text;
    in-out property <string> font_color <=> font_color_com.current-value;

    callback create_pdf();
    callback pdf_compress_gs();     
    VerticalLayout {
        spacing: 10px;
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "主要字体";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            font_path_line:=LineEdit {
                text: current_path + "/fonts/qiji-combo.ttf";
                edited(text) => {
                    font_path = text;
                }
            }
        } 
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "备用字体";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            font_backup_path_line:=LineEdit {
                text: current_path + "/fonts/simsun.ttc";
                edited(text) => {
                    font_backup_path = text;
                }
            }
        }
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "字体颜色";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            font_color_com:=ComboBox {                                    
                model: ["黑", "红", "蓝", "绿", "褐", "深灰", "墨"];
                current-value: "黑";
                selected(current-value) => {
                    font_color = current-value;
                }
            }
        } 
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "书籍名称";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            book_name_line:=LineEdit {
                text: "庄子";
                edited(text) => {
                    book_name = text;
                }
            }
        }         
        HorizontalLayout {
            height: 50px;
            spacing: 10px;                    
            Text {
                text: "输入文本";
                vertical-alignment: center;
                font-size: 20px;                                       
            }
            input_path_line:=LineEdit {
                text: current_path + "/text/001.txt";
                edited(text) => {
                    input_path = text;
                }
            }
        }  
        HorizontalLayout {
            height: 50px;
            spacing: 10px;                    
            Text{                
                text: "输出文件";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            output_path_line:=LineEdit {
                text: current_path + "/pdf/庄子.pdf";
                read-only: false;
                edited(text) => {
                    output_path = text;
                }
            } 
        }                                    
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "压缩参数";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            compress_ratio_slider:=Slider {                                                              
                minimum: 10;
                maximum: 100;
                step: 1;
                value: 80;
                changed(value) => {
                    compress_ratio = Math.round(value);
                }
            }
            compress_ratio_text:=Text {
                text: Math.round(compress_ratio);
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;                                    
            }
        }
        HorizontalLayout {
            height: 50px;
            spacing: 10px; 
            alignment: center;                
            BlueButton {
                width: 150px;
                Text {
                    font-size: 20px;
                    text: "生成PDF";
                    color: AppGlobal.foreground;
                }             
                clicked => {
                    create_pdf();
                }
            }            
            BlueButton {
                width: 150px;
                Text {
                    font-size: 20px;
                    text: "GS压缩PDF";
                    color: AppGlobal.foreground;
                }             
                clicked => {
                    pdf_compress_gs();
                }
            }            
        }
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            alignment: center;                
            outtext:=Text {                
                font-size: 20px;  
                vertical-alignment: center;                                     
                color: #0028bb;
                text: "准备就绪";
            }
        }
    }
}

export  component TemplateTab inherits Rectangle {
    in-out property <string> page_width_mm <=> page_width.text;
    in-out property <string> page_height_mm <=> page_height.text;
    in-out property <string> canvas_direction <=> direction.current-value;
    in-out property <string> canvas_size <=> canvas.current-value;    
    in-out property <string> config_path <=> config_path_line.text;
    in-out property <int> center_width_mm <=> center_width.value;
    in-out property <int> column_count <=> col_count.value;
    in-out property <int> page_left_margin_mm <=> page_left_margin.value;
    in-out property <int> page_top_margin_mm <=> page_top_margin.value;
    in-out property <int> tail_margin_mm <=>tail_margin.value;
    in-out property <string> background_color <=> bg_color_com.current-value;
    in-out property <string> line_color <=> line_color_com.current-value;
    in-out property <string> outtext <=> outtext.text;

    callback get_config();
    callback save_config();
    callback calculate ();
    callback make_template();
    calculate => {
        if (canvas_direction == "横向") {
            if (canvas_size == "A4") {
                page_width_mm = "297";
                page_height_mm = "210";
            } else if (canvas_size == "B5") {
                page_width_mm = "250";
                page_height_mm = "176";
            } else if (canvas_size == "16K") {
                page_width_mm = "260";
                page_height_mm = "184";
            } else if (canvas_size == "32K") {
                page_width_mm = "184";
                page_height_mm = "130";
            }
        } else {
            if (canvas_size == "A4") {
                page_width_mm = "210";
                page_height_mm = "297";
            } else if (canvas_size == "B5") {
                page_width_mm = "176";
                page_height_mm = "250";
            } else if (canvas_size == "16K") {
                page_width_mm = "184";
                page_height_mm = "260";
            } else if (canvas_size == "32K") {
                page_width_mm = "130";
                page_height_mm = "184";
            }
        }
    }

    VerticalLayout {
        spacing: 10px;
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "配置文件";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            config_path_line:=LineEdit {
                text:"./config.json";
                edited(text) => {
                    config_path = text;
                }
            } 
        }
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "画布";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            canvas:=ComboBox {
                model: ["A4", "B5", "16K", "32K"];
                current-value: "A4";
                selected => {
                    calculate();
                }
            }
            Text {
                text: "排版";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            direction:=ComboBox {
                model: ["横向", "纵向"];
                current-value: "横向";
                selected => {
                    calculate();
                }
            }
        } 
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "宽*高";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            page_width:=Text {
                vertical-alignment: center;                                       
                text: "297";
            }
            Text {
                text: "*";
                vertical-alignment: center;                                       
            }
            page_height:=Text {
                vertical-alignment: center;                                       
                text: "210";
            }
        } 
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "中心宽";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            center_width:=SpinBox {
                value: 20;
                minimum: 12;
                step-size: 2;
                maximum: 24;
                edited(value) => {
                    center_width_mm = value;
                }
            }
            Text {
                text: "总列数";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            col_count:=SpinBox {
                value: 20;
                minimum: 10;
                step-size: 2;
                maximum: 24;
                edited(value) => {
                    column_count = value;
                }
            }
        } 
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "上侧留白";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            page_top_margin:=SpinBox {
                value: 20;
                minimum: 10;
                maximum: 25;
                step-size: 1;
                edited(value) => {
                    page_top_margin_mm = value;
                }
            }
            Text {
                text: "边框留白";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }   
            page_left_margin:=SpinBox {
                value: 8;
                minimum: 6;
                maximum: 16;
                step-size: 1;
                edited(value) => {
                    page_left_margin_mm = value;
                }
            }         
        }  
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "鱼尾留白";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            tail_margin:=SpinBox {
                value: 30;
                minimum: 20;
                maximum: 60;
                step-size: 1;
                edited(value) => {
                    tail_margin_mm = value;
                }
            }                    
        }   
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {                        
                text: "背景颜色";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            bg_color_com:=ComboBox {
                model: ["白", "泛黄", "浅黄", "灰黄", "旧书", "深黄"];
                current-value: "泛黄";
                selected(current-value) => {
                    background_color = current-value;
                }
            }
        } 
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            Text {
                text: "边框颜色";
                vertical-alignment: center;
                font-size: 20px;                                       
                color: black;
            }
            line_color_com:=ComboBox {
                model: ["黑", "红", "蓝", "绿", "褐", "深灰", "墨"];
                current-value:  "黑";
                selected(current-value) => {
                    line_color = current-value;
                }
            }
        }                      
        HorizontalLayout {
            spacing: 10px;
            height: 50px;
            alignment: center;                
            BlueButton {
                width: 150px;
                Text {
                    font-size: 20px;
                    text: "加载配置";
                    color: AppGlobal.foreground;
                }             
                clicked => {
                    get_config();
                }
            }
            BlueButton {
                width: 150px;
                Text {
                    font-size: 20px;
                    text: "保存配置";
                    color: AppGlobal.foreground;
                }             
                clicked => {
                    save_config();
                }
            }
            BlueButton {
                width: 150px;
                Text {
                    font-size: 20px;
                    text: "生成模板";
                    color: AppGlobal.foreground;
                }             
                clicked => {
                    make_template();
                }
            }
        }
        HorizontalLayout {
            height: 50px;
            spacing: 10px;
            alignment: center;                
            outtext:=Text {                
                font-size: 20px;  
                vertical-alignment: center;                                     
                color: #0028bb;
                text: "准备就绪";
            }
        } 
    }
}

